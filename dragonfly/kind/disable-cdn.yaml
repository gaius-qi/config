scheduler:
  image: d7yio/scheduler
  tag: latest
  replicas: 1
  metrics:
    enable: true
  resources:
    requests:
      cpu: "0"
      memory: "0"
    limits:
      cpu: "2"
      memory: "4Gi"
  config:
    scheduler:
      retryLimit: 20
      retryInterval: 200ms
    cdn:
      enable: false
    verbose: true
    pprofPort: 18066

cdn:
  enable: false

dfdaemon:
  image: d7yio/dfdaemon
  tag: latest
  resources:
    requests:
      cpu: "0"
      memory: "0"
    limits:
      cpu: "1"
      memory: "1Gi"
  config:
    verbose: true
    pprofPort: 18066
    metrics: 127.0.0.1:8000
    storage:
      taskExpireTime: 12h
      multiplex: true
      diskGCThreshold: 180Gi
    scheduler:
      disableAutoBackSource: true
      manager:
        refreshInterval: 10s
    proxy:
      # -- Filter for hash url
      # when defaultFilter: "Expires&Signature", for example:
      #  http://localhost/xyz?Expires=111&Signature=222 and http://localhost/xyz?Expires=333&Signature=999
      # is same task
      defaultFilter: "Expires&Signature"
      # -- Proxy security option
      security:
        insecure: true
      tcpListen:
        # -- Namespace stands the linux net namespace, like /proc/1/ns/net
        # it's useful for running daemon in pod with ip allocated and listening the special port in host net namespace
        # Linux only
        namespace: /run/dragonfly/net
        # -- Listen address
        listen: 0.0.0.0
        # If you want to change port, please update hostPort in $.Values.dfdaemon.hostPort
        # port in configmap is generated from $.Values.dfdaemon.hostPort
        # port: 65001
      registryMirror:
        # -- When enabled, use value of "X-Dragonfly-Registry" in http header for remote instead of url host
        dynamic: true
        # -- URL for the registry mirror
        url: https://index.docker.io
      proxies:
        # -- Proxy all http image layer download requests with dfget
        - regx: blobs/sha256.*
        - regx: file-server

manager:
  image: d7yio/manager
  tag: latest
  replicas: 1
  metrics:
    enable: true
  resources:
    requests:
      cpu: "0"
      memory: "0"
    limits:
      cpu: "2"
      memory: "4Gi"
  config:
    verbose: true
    pprofPort: 18066

jaeger:
  enable: true
